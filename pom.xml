<?xml version="1.0" encoding="UTF-8"?>
<!--
- This technical data is controlled under the International Traffic in Arms Regulation (ITAR) and may not be exposed to a foreign person, either in the U.S., or abroad, without proper authorization by the U.S. Department of State.
-
- RESTRICTED RIGHTS
- Contract No.: UAS and Net-Centric Resource Management Teaming IR&D
- Contractor Name: L3HARRIS, COMCEPT DIVISION
- Contractor Address: 1700 Science Place, Rockwall, TX 75032
- The Government's rights to use, modify, reproduce, release, perform, display, or disclose this software are restricted by paragraph (b)(3) of the Rights in Noncommercial Computer Software and Noncommercial Computer Software Documentation clause contained in the above identified contract.  Any reproduction of computer software or portions thereof marked with this legend must also reproduce the markings.  Any person, other than the Government, who has been provided access to such software, must promptly notify the above named Contractor.
-
- COPYRIGHT 2018, 2020 L3 TECHNOLOGIES INC., COMCEPT DIVISION, A SUBSIDIARY OF L3HARRIS TECHNOLOGIES, INC. (L3HARRIS).  ALL RIGHTS RESERVED.
  -->
<project xmlns="https://maven.apache.org/POM/4.0.0"
         xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.comcept.daedalus</groupId>
    <artifactId>daedalus</artifactId>
    <version>0.1.0</version>
    <packaging>pom</packaging>

    <name>Daedalus</name>
    <inceptionYear>2020</inceptionYear>
    <organization>
        <name>L3Harris Technologies ComCept Division</name>
    </organization>

    <distributionManagement>
        <repository>
            <id>libs-release</id>
            <name>Artifactory Release Repo</name>
            <url>https://artifactory:8081/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
            <id>libs-snapshot</id>
            <name>Artifactory Snapshot Repo</name>
            <url>https://artifactory:8081/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <scala.build>2.13</scala.build>
        <!-- Install -->
        <install.folder>/opt/daedalus</install.folder>
        <build.number>SNAPSHOT</build.number>
        <!-- Sonar properties-->
        <aggregate.report.dir>daedalus-tests/target/site/jacoco-aggregate/jacoco.xml</aggregate.report.dir>

        <!-- Dependencies -->
        <akka.version>2.6.5</akka.version>
        <guava.version>29.0-jre</guava.version>
        <logback.version>1.2.3</logback.version>
        <lombok.version>1.18.12</lombok.version>
        <ncct-typed.version>0.2.0_5.0.1.r9</ncct-typed.version>
        <ncct-zmq.version>0.3.0</ncct-zmq.version>
        <protobuf.version>3.7.1</protobuf.version>
        <typesafe-config.version>1.4.0</typesafe-config.version>
		<!-- Test Dependencies -->
        <junit-jupiter.version>5.6.2</junit-jupiter.version>
        <mockito.version>3.3.3</mockito.version>

        <!-- Maven plugins -->
        <maven-checkstyle.version>3.1.1</maven-checkstyle.version>
        <checkstyle.version>8.32</checkstyle.version>
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <errorprone.version>2.3.4</errorprone.version>
        <nullaway.version>0.7.9</nullaway.version>
        <maven-dependency.version>3.1.2</maven-dependency.version>
        <maven-enforcer.version>3.0.0-M3</maven-enforcer.version>
        <extra-enforcer-rules.version>1.2</extra-enforcer-rules.version>
        <maven-failsafe.version>3.0.0-M4</maven-failsafe.version>
        <maven-jacoco.version>0.8.5</maven-jacoco.version>
        <maven-jar.version>3.2.0</maven-jar.version>
        <maven-javadoc.version>3.2.0</maven-javadoc.version>
        <maven-protobuf-plugin.version>0.6.1</maven-protobuf-plugin.version>
        <os-maven-plugin.version>1.6.2</os-maven-plugin.version>
        <maven-resources.version>3.1.0</maven-resources.version>
        <maven-spotbugs-plugin.version>4.0.0</maven-spotbugs-plugin.version>
        <spotbugs.version>4.0.2</spotbugs.version>
        <maven-surefire.version>3.0.0-M4</maven-surefire.version>
        <maven-versions-plugin.version>2.7</maven-versions-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- provided by daedalus-core -->
            <dependency>
                <groupId>com.comcept.daedalus</groupId>
                <artifactId>daedalus-datamodel</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.comcept.daedalus</groupId>
                <artifactId>daedalus-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.comcept.daedalus</groupId>
                <artifactId>daedalus-common-behaviors</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.comcept.daedalus</groupId>
                <artifactId>daedalus-agent-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Compile-time dependencies -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>${errorprone.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.uber.nullaway</groupId>
                <artifactId>nullaway</artifactId>
                <version>${nullaway.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Include annotation processors as compile-time dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.uber.nullaway</groupId>
            <artifactId>nullaway</artifactId>
        </dependency>

        <!-- Include test frameworks for everyone -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <phase>compile</phase>
                            <configuration>
                                <compilerArgs>
                                    <!-- Show all warnings except ones about annotation processing -->
                                    <arg>-Xlint:all,-options,-processing,-cast</arg>
                                    <arg>-XDcompilePolicy=simple</arg>
                                    <!-- Suppress implicit class warnings -->
                                    <arg>-implicit:class</arg>
                                    <!-- Enable Error Prone and Null Away checking -->
                                    <arg>
                                        -Xplugin:ErrorProne
                                        -Xep:NullAway:ERROR
                                        -XepOpt:NullAway:AnnotatedPackages=net.java.otr4j
                                        -XepDisableWarningsInGeneratedCode
                                        -XepExcludedPaths:.*/generated.*/.*
                                    </arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-testCompile</id>
                            <phase>test-compile</phase>
                            <configuration>
                                <compilerArgs>
                                    <!-- Only handle type checks for tests -->
                                    <arg>-Xlint:unchecked</arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <release>${java.version}</release>
                        <showWarnings>true</showWarnings>
                        <failOnWarning>true</failOnWarning>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>com.google.errorprone</groupId>
                                <artifactId>error_prone_core</artifactId>
                                <version>${errorprone.version}</version>
                            </path>
                            <path>
                                <groupId>com.uber.nullaway</groupId>
                                <artifactId>nullaway</artifactId>
                                <version>${nullaway.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>.</classpathPrefix>
                                <classpathPrefix>lib/</classpathPrefix>
                                <mainClass>${main.class}</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency.version}</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                <includeScope>runtime</includeScope>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources.version}</version>
                    <executions>
                        <execution>
                            <id>copy-meta-inf</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>false</filtering>
                                        <include>META-INF/**</include>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/conf</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>false</filtering>
                                        <exclude>META-INF/**</exclude>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-scripts</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/scripts</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc.version}</version>
                    <configuration>
                        <show>package</show>
                        <nohelp>true</nohelp>
                    </configuration>
                    <executions>
                        <execution>
                            <id>javadocs-jar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <doclint>none</doclint>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${maven-spotbugs-plugin.version}</version>
                    <dependencies>
                        <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle.version}</version>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <configuration>
                                <encoding>UTF-8</encoding>
                                <configLocation>./style_checks.xml</configLocation>
                                <consoleOutput>true</consoleOutput>
                                <failOnViolation>true</failOnViolation>
                                <failsOnError>true</failsOnError>
                                <sourceDirectories>
                                    <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                                    <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                                </sourceDirectories>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-no-snapshots</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <reactorModuleConvergence>
                                        <message>The reactor is not valid</message>
                                        <ignoreModuleDependencies>true</ignoreModuleDependencies>
                                    </reactorModuleConvergence>
                                    <!-- junit only in test/provided -->
                                    <bannedDependencies>
                                        <excludes>
                                            <exclude>com.google.auto.service</exclude>
                                            <exclude>com.google.errorprone</exclude>
                                            <exclude>org.immutables</exclude>
                                            <exclude>org.junit</exclude>
                                            <exclude>org.junit.jupiter</exclude>
                                            <exclude>org.mockito</exclude>
                                            <exclude>com.carrotsearch:junit-benchmarks</exclude>
                                        </excludes>
                                        <includes>
                                            <include>com.google.auto.service:*:*:*:provided</include>
                                            <include>com.google.errorprone:*:*:*:provided</include>
                                            <include>org.immutables:*:*:*:provided</include>
                                            <include>org.junit:*:*:*:test</include>
                                            <include>org.junit.jupiter:*:*:*:test</include>
                                            <include>org.mockito:*:*:*:test</include>
                                            <include>com.carrotsearch:junit-benchmarks:*:*:*:test</include>
                                        </includes>
                                        <searchTransitive>false</searchTransitive>
                                    </bannedDependencies>
                                    <!-- need Java 8 or greater -->
                                    <requireJavaVersion>
                                        <version>[1.8,)</version>
                                    </requireJavaVersion>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>${extra-enforcer-rules.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven-jacoco.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire.version}</version>
                    <configuration>
                        <argLine>${argLine} -Dfile.encoding=ASCII</argLine>
                        <excludes>
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <skipTests>${skip.tests}</skipTests>
                                <argLine>${argLine} -Duser.timezone=UTC -Xms256m -Xmx256m</argLine>
                                <includes>
                                    <includes>**/*IntegrationTest.java</includes>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${maven-versions-plugin.version}</version>
                    <configuration>
                        <rulesUri>file:///${session.executionRootDirectory}/maven-version-rules.xml</rulesUri>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>docs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <modules>
        <module>daedalus-apis</module>
        <module>daedalus-agents</module>
        <module>daedalus-tests</module>
    </modules>

</project>

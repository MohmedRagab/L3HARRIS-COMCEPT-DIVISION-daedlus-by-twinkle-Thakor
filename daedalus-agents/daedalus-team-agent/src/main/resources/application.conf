#
# This technical data is controlled under the International Traffic in Arms Regulation (ITAR) and may not be exposed to a foreign person, either in the U.S., or abroad, without proper authorization by the U.S. Department of State.
#
# RESTRICTED RIGHTS
# Contract No.: UAS and Net-Centric Resource Management Teaming IR&D
# Contractor Name: L3HARRIS, COMCEPT DIVISION
# Contractor Address: 1700 Science Place, Rockwall, TX 75032
# The Government's rights to use, modify, reproduce, release, perform, display, or disclose this software are restricted by paragraph (b)(3) of the Rights in Noncommercial Computer Software and Noncommercial Computer Software Documentation clause contained in the above identified contract.  Any reproduction of computer software or portions thereof marked with this legend must also reproduce the markings.  Any person, other than the Government, who has been provided access to such software, must promptly notify the above named Contractor.
#
# COPYRIGHT 2018, 2020 L3 TECHNOLOGIES INC., COMCEPT DIVISION, A SUBSIDIARY OF L3HARRIS TECHNOLOGIES, INC. (L3HARRIS).  ALL RIGHTS RESERVED.
#
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  log-config-on-start = off
}

ncct {
  connection = "tcp://128.170.175.227:9001"
  capco = "UNCLASSIFIED"
  owner = "USA"
}

app {
  agent {
    timers {
      # milliseconds: Interval to report status from the agent
      agent_status_interval = 5000
    }
  }
  behaviors {
    message_subscription {
      # Optional subtypes can be:
      #   Excluded (default to no-statement)
      #   "TEAMID" (for an initially unknown team id)
      #   "LOCAL" (for messages sent within the same platform)
      subscribe_to = [
        { catalog = "CT_NCCT_5", type = "NMST_PlatformPosition" },
        { catalog = "CT_NCCT_5", type = "NMST_PlatformConfiguration" },
        { catalog = "Daedalus",  type = "TeamAssignment" },
        { catalog = "Daedalus",  type = "TeamInvitation",             subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "TeamInvitationResponse",     subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "TeamRegistration",           subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "TeamTask",                   subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "TeamTaskStatus",             subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "PilotTask",                  subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "PilotTaskStatus",            subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "FusionTask",                 subtype = "TEAMID" },
        { catalog = "Daedalus",  type = "FusionTaskStatus",           subtype = "TEAMID" }
      ]
    }
    team_monitor {
      timers {
        # seconds: Maximum duration to form a team before registering what platforms you
        # have teamed with by then
        team_formation_timeout = 120

        # milliseconds: Time to wait after receiving an initial Platform Position for other
        # Platform Positions, before sending out invitations
        process_candidates     = 10000

        # milliseconds: Scalar value to multiply by the platform's "place in line" for
        # sending invitations, to avoid collision
        send_invitations       = 500

        # seconds: Maximum duration to wait for invitation responses after sending an
        # invitation
        ack_wait_timeout       = 60

        # seconds: Maximum duration after which a platform that has not sent a new Platform
        # Position is declared missing
        platform_expiration    = 60
      }
    }
  }
}